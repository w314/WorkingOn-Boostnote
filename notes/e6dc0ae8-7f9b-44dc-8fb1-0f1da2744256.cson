createdAt: "2019-08-20T17:56:14.142Z"
updatedAt: "2020-04-08T16:57:26.478Z"
type: "MARKDOWN_NOTE"
folder: "68038d270558e5b040df"
title: "Lists in Python"
tags: [
  "python"
  "list"
]
content: '''
  # Lists in Python
  
  - list is compound data type
  - list is an ordered sequence
  - lists are mutable (unlike tuples)
  
  ```python
  lst = [0] * 3
  # [0, 0, 0]
  
  my_list = [1, 'foo', 3.14, [11, 12], ('bar', 3)]
  ```
  - lists ca- n be indexed
  ```python
  print(my_list[0])
  # 1
  print(my_list[3][1])
  # 12
  print(my_list[-1])
  # ('bar', 3)
  ```
  - lists can be sliced
  ```python
  my_list[1:3]
  # ['foo', 3.14]
  ```
  
  - list can be reversed by slicing
  ```python
  a = 'alma'
  b = a[::-1]
  # 'amla'
  
  my_list = [1, 2, 3]
  reversed = my_list[::-1]
  # [3, 2, 1]
  ```
  - lists can be concatenated
  ```python
  long_list = [1, 2, 3] + [1, 1]
  # [1, 2, 3, 1, 1]
  ```
  
  ### Modifying lists
  
  - use `extend()` to concatenate new elements to list
  ```python
  lst = [1, 2, 3]
  lst.extend([4, 5])
  print(lst)
  # [1, 2, 3, 4, 5]
  ```
  - use `append()` to add one new element to list
  ```python
  lst = [1, 2, 3]
  lst.append([4, 5])
  print(lst)
  # [1, 2, 3, [4, 5]]
  ```
  - change element based on index
  ```python
  lst = [1, 2, 3]
  lst[1] = 1
  print(lst)
  # [1, 1, 3]
  ```
  - use `del()` to delete element
  ```python
  lst = [1, 2, 3]
  del(lst[2])
  print(lst)
  # [1, 2]
  ``` 
  
  ### Converting strings to lists
  
  - use `split()` to separate string to list elements
  default separation character is space
  ```python
  my_str = 'one,two three'
  lst1 = my_str.split();
  print(lst1)
  # ['one, two', 'three']
  lst2 = my_str.split(',')
  print(lst2)
  # ['one', 'two three']
  ```
  ### Converting lists to string
  ```python
  lst = ['h', 'e', 'l', 'l', 'o']
  str = ''.join(lst)
  # 'hello'
  ``````
  
  ### Aliasing
  When we set variable B equal to the list variable A both are referencing the same list in memory
  ```python
  A = [1, 2, 3]
  B = A
  B[1] = 5
  print(A)
  # [1, 5, 3]
  ```
  
  To assign a copy of list A to list B:
  ```python
  A = [1, 2, 3]
  B = A[:]
  B[1] = 5
  print(A)
  # [1, 2, 3]
  ```
  
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
