createdAt: "2019-08-28T17:43:47.393Z"
updatedAt: "2020-03-26T18:47:01.462Z"
type: "MARKDOWN_NOTE"
folder: "68038d270558e5b040df"
title: "Python Overview"
tags: [
  "python"
  "loops"
  "range"
  "iteration"
]
content: '''
  # `Python` Overview
  
  ## Control Structures
  
  ### iteration with loops
  ```python
  # Examples of iteration with for loops.
  
  my_list = [0, 1, 2, 3, 4, 5]
  
  # Print each value in my_list. 
  # Note you can use the "in" keyword to iterate over a list.
  for item in my_list:
      print('The value of item is: ' + str(item))
  
  # Print each index and value pair.
  for i, value in enumerate(my_list):
      print('The index value is: ' + str(i) + '. The value at i is: ' + str(value))
  
  # Print each number from 0 to 9 using a while loop.
  i = 0
  while(i < 10):
      print(i)
      i += 1
  
  # Print each key and dictionary value. Note that you can use the "in" keyword 
  # to iterate over dictionary keys.
  my_dict = {'a': 'jill', 'b': 'tom', 'c': 'tim'}
  for key in my_dict:
      print(key + ', ' + my_dict[key])
  
  ```
  
  ## The `range` function
  
  - Python3: `range()` produces a range object that allows iteration 
  ```python
  my_var = range(2, 5)
  print(my_var)
  # range(2, 5)
  my_list = list(range(2, 5))
  print(my_list)
  # [2, 3, 4]
  ```
  - Python2:The `range` function outputs and ordered sequense as a list
  
  ## `for` loop
  ```python
  for number in range(2):
    print(number)
  # 0
  # 1
  
  numbers = [1, 2]
  for num in numbers:
    print(num)
  # 1, 2
  ```
  
  ## `while` loop
  
  ```python
  num = 1
  while num < 3:
    print(num)
    num += 1
  # 1, 2
  ```
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
