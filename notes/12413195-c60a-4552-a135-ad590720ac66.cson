createdAt: "2020-02-07T20:18:51.638Z"
updatedAt: "2020-02-29T16:42:22.153Z"
type: "MARKDOWN_NOTE"
folder: "7b7225fb954665754643"
title: "Web Development Concepts"
tags: [
  "three_tier_architecture"
  "presentation_layer"
  "business_layer"
  "data_access_layer"
  "full_stack"
  "web_development"
  "user_story"
]
content: '''
  # Web Development Concepts
  
  ## `CORS` (cross-origin resourse sharing)
  `CORS` defines a way for client web application that are loaded in one domain to interract with resources in a different domain
  
  
  ## Three Tier Architecture of Web Development
  
  1.  Presentation Layer
  - delivers information to the user
  - .UI realated concerns are dealt with here
  1. Business Logic Layer
  - data validation
  - dynamic content processing
  - generating content to be delivered to the user
  1. Data Access Layer
  - how we store and interact with the data
  - accessing data through an API
  
  
  ## `user story`
  - user stories are short, simple descriptions of a feature told from the perspective of the person who desires the new capability, usually a user or customer of the system. They typically follow a simple template:
  As a < type of user >, I want < some goal > so that < some reason >.
  
  - a user story to cover large amounts of functionality. These large user stories are generally known as `epics`. Here is an epic agile user story example from a desktop backup product:
      - As a user, I can backup my entire hard drive.
  - Because an epic is generally too large for an agile team to complete in one iteration, it is split into multiple smaller user stories before it is worked on. The epic above could be split into dozens (or possibly hundreds), including these two:
    - As a power user, I can specify files or folders to backup based on file size, date created and date modified.
    - As a user, I can indicate folders not to backup so that my backup drive isn't filled up with things I don't need saved.
'''
linesHighlighted: []
isStarred: false
isTrashed: false
